(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[214],{3506:(e,t,i)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/calculus/limits/piecewise-limit",function(){return i(3304)}])},3304:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});var l=i(4848),n=i(6540),a=i(8565);function r(){let[e,t]=(0,n.useState)("x^2"),[i,r]=(0,n.useState)("2*x + 1"),[s,u]=(0,n.useState)("0"),[o,c]=(0,n.useState)("left"),[h,d]=(0,n.useState)(null);return(0,l.jsxs)("div",{children:[(0,l.jsx)("h2",{children:"Piecewise Function Limit"}),(0,l.jsxs)("p",{children:["Suppose f(x) = ","{"," piece1 if x < boundary, piece2 otherwise ","}",". Approximate the limit at the boundary from one side."]}),(0,l.jsxs)("label",{children:["Piece 1 (x < boundary):",(0,l.jsx)("input",{type:"text",value:e,onChange:e=>t(e.target.value)})]}),(0,l.jsx)("br",{}),(0,l.jsxs)("label",{children:["Piece 2 (x â‰¥ boundary):",(0,l.jsx)("input",{type:"text",value:i,onChange:e=>r(e.target.value)})]}),(0,l.jsx)("br",{}),(0,l.jsxs)("label",{children:["Boundary:",(0,l.jsx)("input",{type:"number",value:s,onChange:e=>u(e.target.value)})]}),(0,l.jsx)("br",{}),(0,l.jsxs)("label",{children:["Side:",(0,l.jsxs)("select",{value:o,onChange:e=>c(e.target.value),children:[(0,l.jsx)("option",{value:"left",children:"Approach from left side of boundary"}),(0,l.jsx)("option",{value:"right",children:"Approach from right side of boundary"})]})]}),(0,l.jsx)("br",{}),(0,l.jsx)("button",{onClick:()=>{try{let t=parseFloat(s),l=(0,a.Mh)("left"===o?e:i,t,"left"===o?"right":"left");d(l)}catch(e){d("Error in calculation")}},children:"Calculate Limit"}),null!==h&&(0,l.jsxs)("p",{children:["Limit = ",h]})]})}}},e=>{var t=t=>e(e.s=t);e.O(0,[297,590,636,593,792],()=>t(3506)),_N_E=e.O()}]);